# ===============================================================
# File:                 $HOME/.mutt/gpg.rc
# Purpose:              Setup file for program "mutt"
# written by:           Nicolas Cavigneaux <nico@bounga.org>
# Latest change:        Mon Jul  7 14:00:24 CEST 2003
# Latest user version:  mutt-1.5.4i [2003-03-19]
# ===============================================================
# time to remember the pgp keys password
set pgp_timeout = 3600
#
# verify automatically the pgp signature of the mail received ?
set pgp_verify_sig = yes
#
# Automatically encrypt the replies to an encrypted message
set pgp_replyencrypt
#
# Automatically sign the replies to a signed message
set pgp_replysign
#
# Message printed when the pgp signature is good
set pgp_good_sign="^gpg: Bonne signature de"
#
# Don't sign automatically
set pgp_autosign = no
#
# Don't crypt automatically
set pgp_autoencrypt = no
#
# decode application/pgp
set pgp_decode_command="/usr/bin/gpg --comment ''  %?p?--passphrase-fd 0? --no-verbose --quiet  --batch  --output - %f"
#
# verify a pgp/mime signature
set pgp_verify_command="/usr/bin/gpg --comment ''  --no-verbose --quiet  --batch  --output - --verify %s %f"
#
# decrypt a pgp/mime attachment
set pgp_decrypt_command="/usr/bin/gpg --comment ''  --passphrase-fd 0 --no-verbose --quiet  --batch  --output - %f"
#
# create a pgp/mime signed attachment
# set pgp_sign_command="gpg-2comp --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_sign_command="/usr/bin/gpg --comment ''   --no-verbose --batch --quiet   --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
#
# create a application/pgp signed (old-style) message
# set pgp_clearsign_command="gpg-2comp --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_clearsign_command="/usr/bin/gpg --comment ''  --no-verbose --batch --quiet   --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
#
# create a pgp/mime encrypted attachment
# set pgp_encrypt_only_command="pgpewrap gpg-2comp -v --batch --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap /usr/bin/gpg --comment ''   --batch  --quiet  --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
#
# create a pgp/mime encrypted and signed attachment
# set pgp_encrypt_sign_command="pgpewrap gpg-2comp --passphrase-fd 0 -v --batch --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap /usr/bin/gpg --comment ''  --passphrase-fd 0  --batch --quiet  --no-verbose  --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
#
# import a key into the public key ring
set pgp_import_command="/usr/bin/gpg --comment ''  --no-verbose --import -v %f"
#
# export a key from the public key ring
set pgp_export_command="/usr/bin/gpg --comment ''  --no-verbose --export --armor %r"
#
# verify a key
set pgp_verify_key_command="/usr/bin/gpg --comment ''  --verbose --batch  --fingerprint --check-sigs %r"
#
# read in the public key ring
set pgp_list_pubring_command="/usr/bin/gpg --comment ''  --no-verbose --batch --quiet   --with-colons --list-keys %r" 
#
# read in the secret key ring
set pgp_list_secring_command="/usr/bin/gpg --comment ''  --no-verbose --batch --quiet   --with-colons --list-secret-keys %r" 
